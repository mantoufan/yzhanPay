{"version":3,"file":"assets/js/897d7693a8356babeb59.js","mappings":"6KACA,SACCA,MADc,YACiB,IAAtBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACZC,EAAU,IAAIC,QAAQC,yCAA2B,CACtDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAER,SAAAA,EAAUC,SAAAA,IACjCQ,QAAS,IAAIC,QAAQ,CAAE,eAAgB,uBAExC,OAAOC,MAAMT,GACXU,MAAK,SAAAC,GACL,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC/C,MAAM,IAAIC,MAAMF,EAASG,YAE1B,OAAOH,EAASI,UAEhBL,MAAK,SAAAM,GACLC,aAAaC,QAAQ,OAAQb,KAAKC,UAAUU,OARvC,OAUC,WACN,MAAM,IAAIH,MAAM,qBAGnBM,UArBc,WAsBb,OAAOF,aAAaG,QAAQ,QAAUC,QAAQC,UAAYD,QAAQE,UAEnEC,OAxBc,WA0Bb,OADAP,aAAaQ,WAAW,QACjBJ,QAAQC,YCtBjB,IAAMI,EAAa,SAACC,GAAsB,IAAjBC,EAAiB,uDAAP,GAC7BA,EAAQrB,UACXqB,EAAQrB,QAAU,IAAIC,QAAQ,CAAEqB,OAAQ,sBAE1C,MAAkBxB,KAAKyB,MAAMb,aAAaG,QAAQ,SAA1CW,EAAR,EAAQA,MAER,OADAH,EAAQrB,QAAQyB,IAAI,gBAApB,iBAA+CD,IACxCE,WAAWC,UAAUP,EAAKC,IAGlC,mBAAe,OAAM,gBAACO,EAAA,EAAD,CAAOC,aAAcA,EAAcC,cAAcC,EAAAA,EAAAA,GAAmB,uCAAwCZ,IAChI,gBAACa,EAAA,EAAD,CAAUC,KAAK,a","sources":["webpack://yzhanpay/./src/pages/Admin/authProvider.jsx","webpack://yzhanpay/./src/pages/Admin/Admin.jsx"],"sourcesContent":["import { PATH_API } from '@/config'\nexport default {\n\tlogin ({ username, password }) {\n\t\tconst request = new Request(PATH_API + 'authenticate', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ username, password }),\n\t\t\theaders: new Headers({ 'Content-Type': 'application/json' }),\n\t\t})\n\t\treturn fetch(request)\n\t\t\t.then(response => {\n\t\t\t\tif (response.status < 200 || response.status >= 300) {\n\t\t\t\t\tthrow new Error(response.statusText)\n\t\t\t\t}\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then(auth => {\n\t\t\t\tlocalStorage.setItem('auth', JSON.stringify(auth))\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new Error('Network error')\n\t\t\t})\n\t},\n\tcheckAuth () {\n\t\treturn localStorage.getItem('auth') ? Promise.resolve() : Promise.reject()\n\t},\n\tlogout () {\n\t\tlocalStorage.removeItem('auth')\n\t\treturn Promise.resolve()\n\t}\n}","import React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport jsonServerProvider from 'ra-data-json-server'\nimport authProvider from './authProvider'\n\nconst httpClient = (url, options = {}) => {\n\tif (!options.headers) {\n\t\t\toptions.headers = new Headers({ Accept: 'application/json' })\n\t}\n\tconst { token } = JSON.parse(localStorage.getItem('auth'))\n\toptions.headers.set('Authorization', `Bearer ${token}`)\n\treturn fetchUtils.fetchJson(url, options)\n}\n\nexport default () => <Admin authProvider={authProvider} dataProvider={jsonServerProvider('https://jsonplaceholder.typicode.com', httpClient)} >\n\t<Resource name=\"index\" />\n</Admin>"],"names":["login","username","password","request","Request","PATH_API","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","statusText","json","auth","localStorage","setItem","checkAuth","getItem","Promise","resolve","reject","logout","removeItem","httpClient","url","options","Accept","parse","token","set","fetchUtils","fetchJson","Admin","authProvider","dataProvider","jsonServerProvider","Resource","name"],"sourceRoot":""}