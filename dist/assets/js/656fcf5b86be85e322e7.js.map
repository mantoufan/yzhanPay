{"version":3,"file":"assets/js/656fcf5b86be85e322e7.js","mappings":"8NAGA,SACEA,GAAIC,OAAOC,OAAOC,EAAAA,EAAS,CACzBC,aAAc,CACZC,MAAO,CACLC,MAAO,iCAIbC,GAAIN,OAAOC,OAAOM,IAAS,CACzBJ,aAAc,CACZC,MAAO,CACLC,MAAO,gBCVf,GAAeG,EAAAA,EAAAA,IAAqB,SAAAC,GAAM,OAAIC,EAAKD,IAAWC,EAAKX,MAAIY,EAAAA,EAAAA,MCDvE,GACCP,MADc,YACiB,IAAtBQ,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SACZC,EAAU,IAAIC,QAAQC,yCAA2B,CACtDC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAER,SAAAA,EAAUC,SAAAA,IACjCQ,QAAS,IAAIC,QAAQ,CAAE,eAAgB,uBAExC,OAAOC,MAAMT,GACXU,MAAK,SAAAC,GACL,GAAIA,EAASC,OAAS,KAAOD,EAASC,QAAU,IAC/C,MAAM,IAAIC,MAAMC,UAAU,6BAE3B,OAAOH,EAASI,UAEhBL,MAAK,SAAAM,GACLC,aAAaC,QAAQ,OAAQb,KAAKC,UAAUU,OARvC,OAUC,WACN,MAAM,IAAIH,MAAMM,EAAaL,UAAU,iCAG1CM,UArBc,WAsBb,OAAOH,aAAaI,QAAQ,QAAUC,QAAQC,UAAYD,QAAQE,UAEnEC,OAxBc,WA0Bb,OADAR,aAAaS,WAAW,QACjBJ,QAAQC,YCvBjB,IAAMI,EAAa,SAACC,GAAsB,IAAjBC,EAAiB,uDAAP,GAC7BA,EAAQtB,UACXsB,EAAQtB,QAAU,IAAIC,QAAQ,CAAEsB,OAAQ,sBAE1C,MAAkBzB,KAAK0B,MAAMd,aAAaI,QAAQ,SAA1CW,EAAR,EAAQA,MAER,OADAH,EAAQtB,QAAQ0B,IAAI,gBAApB,iBAA+CD,IACxCE,WAAWC,UAAUP,EAAKC,IAGlC,mBAAe,OAAM,gBAACO,EAAA,EAAD,CAAOC,aAAcA,EAAcC,cAAcC,EAAAA,EAAAA,GAAmB,uCAAwCZ,GAAaR,aAAcA,GAC3J,gBAACqB,EAAA,EAAD,CAAUC,KAAK,a","sources":["webpack://yzhanpay/./src/language/i18n.js","webpack://yzhanpay/./src/language/i18nProvider.js","webpack://yzhanpay/./src/pages/Admin/authProvider.jsx","webpack://yzhanpay/./src/pages/Admin/Admin.jsx"],"sourcesContent":["import English from 'ra-language-english'\nimport Chinese from 'ra-language-chinese'\n\nexport default {\n  en: Object.assign(English, {\n    notification: {\n      login: {\n        wrong: 'Wrong account and password'\n      }\n    }\n  }),\n  zh: Object.assign(Chinese, {\n    notification: {\n      login: {\n        wrong: '错误用户名和密码'\n      }\n    }\n  })\n}","import { resolveBrowserLocale } from 'react-admin'\nimport polyglotI18nProvider from 'ra-i18n-polyglot'\nimport i18n from './i18n'\n\nexport default polyglotI18nProvider(locale => i18n[locale] || i18n.en, resolveBrowserLocale())","import { PATH_API } from '@/config'\nimport i18nProvider from '@/language/i18nProvider'\n\nexport default {\n\tlogin ({ username, password }) {\n\t\tconst request = new Request(PATH_API + 'authenticate', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify({ username, password }),\n\t\t\theaders: new Headers({ 'Content-Type': 'application/json' }),\n\t\t})\n\t\treturn fetch(request)\n\t\t\t.then(response => {\n\t\t\t\tif (response.status < 200 || response.status >= 300) {\n\t\t\t\t\tthrow new Error(translate('notification.login.wrong'))\n\t\t\t\t}\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then(auth => {\n\t\t\t\tlocalStorage.setItem('auth', JSON.stringify(auth))\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthrow new Error(i18nProvider.translate('notification.login.wrong'))\n\t\t\t})\n\t},\n\tcheckAuth () {\n\t\treturn localStorage.getItem('auth') ? Promise.resolve() : Promise.reject()\n\t},\n\tlogout () {\n\t\tlocalStorage.removeItem('auth')\n\t\treturn Promise.resolve()\n\t}\n}","import React from 'react'\nimport { Admin, Resource } from 'react-admin'\nimport jsonServerProvider from 'ra-data-json-server'\nimport authProvider from './authProvider'\nimport i18nProvider from '@/language/i18nProvider'\n\nconst httpClient = (url, options = {}) => {\n\tif (!options.headers) {\n\t\t\toptions.headers = new Headers({ Accept: 'application/json' })\n\t}\n\tconst { token } = JSON.parse(localStorage.getItem('auth'))\n\toptions.headers.set('Authorization', `Bearer ${token}`)\n\treturn fetchUtils.fetchJson(url, options)\n}\n\nexport default () => <Admin authProvider={authProvider} dataProvider={jsonServerProvider('https://jsonplaceholder.typicode.com', httpClient)} i18nProvider={i18nProvider} >\n\t<Resource name=\"index\" />\n</Admin>"],"names":["en","Object","assign","English","notification","login","wrong","zh","Chinese","polyglotI18nProvider","locale","i18n","resolveBrowserLocale","username","password","request","Request","PATH_API","method","body","JSON","stringify","headers","Headers","fetch","then","response","status","Error","translate","json","auth","localStorage","setItem","i18nProvider","checkAuth","getItem","Promise","resolve","reject","logout","removeItem","httpClient","url","options","Accept","parse","token","set","fetchUtils","fetchJson","Admin","authProvider","dataProvider","jsonServerProvider","Resource","name"],"sourceRoot":""}